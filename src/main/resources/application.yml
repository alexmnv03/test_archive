server:
  port: 8090
  servlet:
    context-path: /test

spring:
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_ON_EXIT=FALSE;INIT=CREATE SCHEMA IF NOT EXISTS catalog_sh
    driverClassName: org.h2.Driver
    username: sa
    password: password
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    database: default
    generate-ddl: true    
  h2:
    console:
      enabled: true

hibernate.dialect: org.hibernate.dialect.H2Dialect
hibernate.show_sql: true
hibernate.hbm2ddl.auto: create-drop

logging.level.com.alex.catalog: DEBUG

# spring:
#   datasource:
#     driverClassName: org.h2.Driver
#     url: jdbc:h2:mem:testdb;;DATABASE_TO_UPPER=false;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1;MODE=PostgreSQL;INIT=CREATE SCHEMA IF NOT EXISTS catalog_sh
#     username: sa
#     password: password
#   jpa:
#     show_sql: true
#     hibernate:
#       dialect: org.hibernate.dialect.H2Dialect      
#         # hbm2ddl: create-drop
#       dll-auto: update
#   liquibase:
#     enabled: true
#     change-log: classpath:db/changelog/db.changelog-master.yaml
#     contexts: prod,dev,test


# jdbc h2
# jdbc:
#   driverClassName: org.h2.Driver
#   pool.size.max: 10
#   statement.timeout: 0
#   url: jdbc:h2:mem:ump-config;DB_CLOSE_ON_EXIT=FALSE
#   username: sa
#   password:
# sessionFactory.packagesToScan: com.asvoip.ump.emailio.entity
# hibernate:
#   dialect: org.hibernate.dialect.H2Dialect
#   show_sql: true
#   hbm2ddl: none
# # Data Source config
# config.datasource.hikari:
#   driverClassName: ${jdbc.driverClassName}
#   jdbcUrl: ${jdbc.url}
#   password: ${jdbc.password}
#   username: ${jdbc.username}
#   maximumPoolSize: 2
# # sender attributes

